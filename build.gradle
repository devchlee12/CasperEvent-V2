plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'softeer'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test // test 작업 후 jacocoTestReport 실행
    reports {
        xml.required.set(false)
        csv.required.set(false)
        html.required.set(true)
    }
    classDirectories.setFrom(files(sourceSets.main.output.classesDirs.asFileTree.matching {
        exclude '**/config/**'
        exclude '**/response/**'
        exclude '**/request/**'
        exclude '**/domain/**/domain/**'
        exclude '**/softeer/team_pineapple_be/*.class'
        exclude '**/enum/**'
        exclude '**/global/**/domain/**'
        exclude '**/softeer/team_pineapple_be/global/**/exception'
    }))
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
